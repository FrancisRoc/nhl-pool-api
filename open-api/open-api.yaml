swagger: '2.0'
info:
  version: 1.0.0
  title: Gabarit Node API
  license:
    name: MIT
consumes:
  - application/json
produces:
  - application/json
paths:
    /v1/players/pool/{poolId}/stats/orderedBy/{stat}:
      get:
        summary: Get goals stat of all nhl players
        operationId: goalStat
        tags:
          - Stat ordered by
        parameters:
          - name: stat
            in: path
            required: true
            description: The stat to order by
            type: string
          - $ref: '#/parameters/PoolId'
          - $ref: '#/parameters/Positions'
          - $ref: '#/parameters/Limit'
        responses:
          '200':
            description: Success response
            schema:
              $ref: '#/definitions/Player'
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/players/stats/player/{id}/{year}:
      get:
        summary: Get player info of player player with requested id
        operationId: player
        tags:
          - Player stats
        parameters:
          - name: id
            in: path
            required: true
            description: The id of requested player stats.
            type: string
          - name: year
            in: path
            required: true
            description: The year of requested player stats.
            type: string
        responses:
          '200':
            description: Success response
            schema:
              $ref: '#/definitions/Player'
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/players/draft/{userId}/{poolId}/{playerId}:
      delete:
        summary: Delete player with id in nhlPooling collection
        operationId: deletePlayerById
        tags:
          - Draft player
        parameters:
          - name: userId
            in: path
            required: true
            description: The id of user who selected player.
            type: string
          - name: poolId
            in: path
            required: true
            description: The id of pool to select player.
            type: string
          - name: playerId
            in: path
            required: true
            description: The id of requested player stats.
            type: string
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/players/draft/{userId}/{poolId}:
      get:
        summary: Get player drafted by user id in pool id
        operationId: getDraftedPlayers
        tags:
          - Drafted players
        parameters:
          - name: userId
            in: path
            required: true
            description: The id of user who selected player.
            type: string
          - name: poolId
            in: path
            required: true
            description: The id of pool to select player.
            type: string
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/users/authenticate:
      post:
        summary: authentification to account
        operationId: authentification
        tags:
          - Authentification
        parameters:
          - name: authorization
            in: header
            description: token to be passed as a header
            required: true
            type: array
            items:
              type: integer
              format: int64
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/users/register:
      post:
        summary: Register new user
        operationId: register
        tags:
          - register
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/users:
      get:
        summary: get all users
        operationId: getAll
        tags:
          - Get all users
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/users/current:
      get:
        summary: Get current user
        operationId: getCurrent
        tags:
          - getCurrentUser
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/users/{id}:
      delete:
        summary: Delete user
        operationId: deleteUser
        tags:
          - deleteUser
        parameters:
          - name: id
            in: path
            required: true
            description: The id of user to delete
            type: string
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/pools/create:
      post:
        summary: Create new pool
        operationId: createPool
        tags:
          - create pool
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/pools/{poolId}:
      delete:
        summary: Delete pool
        operationId: deletePool
        tags:
          - Delete pool
        parameters:
          - $ref: '#/parameters/PoolId'
        responses:
          '200':
            description: Success response
            schema:
              $ref: '#/definitions/Pool'
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/pools/getAll/{memberId}:
      get:
        summary: Get all pool registered in database
        operationId: getAllPools
        tags:
          - Get all pools
        parameters:
          - in: path
            name: memberId
            type: string
            required: true
            description: Get all pool associated with member id
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/pools/{id}/members:
      post:
        summary: Add members to pool id in parameter
        operationId: addPoolMembers
        tags:
          - Add pool members
        parameters:
          - in: path
            name: id
            type: string
            required: true
            description: Pool id to get all members of this pool
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/pools/{poolId}/stats:
      get:
        summary: Get important pool stats selected by user
        operationId: getPoolImportantStats
        tags:
          - Get important pool stats
        parameters:
          - in: path
            name: poolId
            type: string
            required: true
            description: Pool id to get all important stats for this pool
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
      post:
        summary: Add important pool stats selected by user (admin user only -> futur feature)
        operationId: savePoolImportantStats
        tags:
          - Post important pool stats
        parameters:
          - in: path
            name: poolId
            type: string
            required: true
            description: Pool id to get all important stats for this pool
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
      put:
        summary: Update important pool stats selected by user (admin user only -> futur feature)
        operationId: updatePoolImportantStats
        tags:
          - Update pool important stats
        parameters:
          - in: path
            name: poolId
            type: string
            required: true
            description: Pool id to get all important stats for this pool
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/pools/{poolId}/currentStat:
      put:
        summary: Update important pool current selected by user (admin user only -> futur feature)
        operationId: updatePoolCurrentStat
        tags:
          - Update pool current stat
        parameters:
          - in: path
            name: poolId
            type: string
            required: true
            description: Pool id to get all important stats for this pool
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
parameters:
  PoolId:
    name: poolId
    in: path
    required: true
    description: The id of requested pool player stats.
    type: string
  Limit:
    name: limit
    in: query
    description: Maximum elements asked. ex. limit=10 (return only 10 players)
    required: false
    type: integer
  Positions:
    name: positions
    in: query
    required: false
    description: The positions filters for players stats. ex. positions=C,LW,RW (return only left wingers, rigth wingers and centers)
    type: string
definitions:
  Player:
    type: object
    description: >-
      Represent player with all stats
    properties:
      _id:
        $ref: '#/definitions/ObjectId'
      player:
        $ref: '#/definitions/PlayerInfos'
      team:
        $ref: '#/definitions/PlayerTeam'        
      stats:
        type: object
        properties:
          gamesPlayed:
            type: number
          stats:
            $ref: '#/definitions/PlayerStats'                    
  PlayerInfos:
    type: object
    properties:
      ID:
        type: string
      LastName:
        type: string
      FirstName:
        type: string
      JerseyNumber:
        type: string
      Position:
        type: string
      Height:
        type: string
      Weight:
        type: string
      BirthDate:
        type: string
      Age:
        type: string
      BirthCity:
        type: string
      BirthCountry:
        type: string
      IsRookie:
        type: string
  PlayerTeam:
    type: object
    properties:
      ID:
        type: string
      City:
        type: string
      Name:
        type: string
      Abbreviation:
        type: string
  PlayerStats:
    type: object
    properties:
      goals:
        type: number
      assists:
        type: number
      points:
        type: number
      hatTricks:
        type: number
      plusMinus:
        type: number
      shots:
        type: number
      shotPercentage:
        type: number
      penalityMin:
        type: number
      powerplayGoals:
        type: number
      powerplayAssists:
        type: number
      powerplayPoints:
        type: number
      shorthandedGoals:
        type: number
      shorthandedAssists:
        type: number
      shorthandedPoints:
        type: number
      gameWinningGoals:
        type: number
      gameTyingGoals:
        type: number
      hits:
        type: number
      faceoff:
        type: number
      faceoffPercent:
        type: number
  Pool:
    type: object
    properties:
      _id:
        type: string
      name:
        type: string
      members:
        type: array
        items:
          $ref: '#/definitions/Member'
  Member:
    type: object
    properties:
      _id: 
        type: string
      name: 
        type: string
      username:
        type: string
  ObjectId:
    type: string
    description: ObjectId mongodb.
    example: 507f191e810c19729de860ea
  ErrorResponse:
    required:
      - error
    properties:
      error:
        $ref: '#/definitions/ApiError'
  ApiError:
    required:
      - code
      - message
    properties:
      code:
        type: string
      message:
        type: string
      target:
        type: string
      details:
        type: array
        items:
          $ref: '#/definitions/ApiError'
      innererror:
        $ref: '#/definitions/ApiInnerError'
  ApiInnerError:
    required:
      - code
      - message
    properties:
      code:
        type: string
      message:
        type: string
      innererror:
        $ref: '#/definitions/ApiInnerError'
    additionalProperties:
      type: string
host: 'nhlpoolhelperfrank.herokuapp.com'
schemes:
  - http
basePath: /nhl/poolApp


