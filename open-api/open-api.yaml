swagger: '2.0'
info:
  version: 1.0.0
  title: Gabarit Node API
  license:
    name: MIT
consumes:
  - application/json
produces:
  - application/json
paths:
    /v1/players/pool/{poolId}/stats/orderedBy/{stat}:
      get:
        summary: Get goals stat of all nhl players
        operationId: goalStat
        tags:
          - Stat ordered by
        parameters:
          - name: poolId
            in: path
            required: true
            description: The id of requested pool player stats.
            type: string
          - name: stat
            in: path
            required: true
            description: The stat to order by
            type: string
        responses:
          '200':
            description: Success response
            schema:
              $ref: '#/definitions/GoalStatResult'
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/players/stats/player/{id}/{year}:
      get:
        summary: Get player info of player player with requested id
        operationId: player
        tags:
          - infos
          - allStats
          - player
        parameters:
          - name: id
            in: path
            required: true
            description: The id of requested player stats.
            type: string
          - name: year
            in: path
            required: true
            description: The year of requested player stats.
            type: string
        responses:
          '200':
            description: Success response
            schema:
              $ref: '#/definitions/PlayerInfosResult'
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/players/draft/{userId}/{poolId}/{playerId}:
      delete:
        summary: Delete player with id in nhlPooling collection
        operationId: deletePlayerById
        tags:
          - delete
          - player
        parameters:
          - name: userId
            in: path
            required: true
            description: The id of user who selected player.
            type: string
          - name: poolId
            in: path
            required: true
            description: The id of pool to select player.
            type: string
          - name: playerId
            in: path
            required: true
            description: The id of requested player stats.
            type: string
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/players/draft/{userId}/{poolId}:
      get:
        summary: Get player drafted by user id in pool id
        operationId: getDraftedPlayers
        tags:
          - drafted players
        parameters:
          - name: userId
            in: path
            required: true
            description: The id of user who selected player.
            type: string
          - name: poolId
            in: path
            required: true
            description: The id of pool to select player.
            type: string
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/users/authenticate:
      post:
        summary: authentification to account
        operationId: authentification
        tags:
          - authentification
        parameters:
          - name: authorization
            in: header
            description: token to be passed as a header
            required: true
            type: array
            items:
              type: integer
              format: int64
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/users/register:
      post:
        summary: register new user
        operationId: register
        tags:
          - register
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/users:
      get:
        summary: get all users
        operationId: getAll
        tags:
          - getAllUsers
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/users/current:
      get:
        summary: get current user
        operationId: getCurrent
        tags:
          - getCurrentUser
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/users/{id}:
      delete:
        summary: delete user
        operationId: deleteUser
        tags:
          - deleteUser
        parameters:
          - name: id
            in: path
            required: true
            description: The id of user to delete
            type: string
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/pools/create:
      post:
        summary: create new pool
        operationId: createPool
        tags:
          - create pool
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/pools/getAll/{memberId}:
      get:
        summary: Get all pool registered in database
        operationId: getAllPools
        tags:
          - Get all pools
        parameters:
          - in: path
            name: memberId
            type: string
            required: true
            description: Get all pool associated with member id
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/pools/{id}/members:
      post:
        summary: Add members to pool id in parameter
        operationId: addPoolMembers
        tags:
          - Add pool members
        parameters:
          - in: path
            name: id
            type: string
            required: true
            description: Pool id to get all members of this pool
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/pools/{poolId}/stats:
      get:
        summary: Get important pool stats selected by user
        operationId: getPoolImportantStats
        tags:
          - Get important pool stats
        parameters:
          - in: path
            name: poolId
            type: string
            required: true
            description: Pool id to get all important stats for this pool
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
      post:
        summary: Add important pool stats selected by user (admin user only -> futur feature)
        operationId: savePoolImportantStats
        tags:
          - Post important pool stats
        parameters:
          - in: path
            name: poolId
            type: string
            required: true
            description: Pool id to get all important stats for this pool
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
      put:
        summary: Update important pool stats selected by user (admin user only -> futur feature)
        operationId: updatePoolImportantStats
        tags:
          - Update pool important stats
        parameters:
          - in: path
            name: poolId
            type: string
            required: true
            description: Pool id to get all important stats for this pool
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
    /v1/pools/{poolId}/currentStat:
      put:
        summary: Update important pool current selected by user (admin user only -> futur feature)
        operationId: updatePoolCurrentStat
        tags:
          - Update pool current stat
        parameters:
          - in: path
            name: poolId
            type: string
            required: true
            description: Pool id to get all important stats for this pool
        responses:
          '200':
            description: Success response
          default:
            description: Error response
            schema:
              $ref: '#/definitions/ErrorResponse'
definitions:
  GoalStatResult:
    required:
      - id
      - lastName
      - firstName
      - team
      - gamesPlayed
      - goals
    properties:
      id:
        type: string
      lastName:
        type: string
      firstName:
        type: string
      team:
        type: string
      gamesPlayed:
        type: number
      goals:
        type: number
  AssistStatResult:
    required:
      - id
      - lastName
      - firstName
      - team
      - gamesPlayed
      - assists
    properties:
      id:
        type: string
      lastName:
        type: string
      firstName:
        type: string
      team:
        type: string
      gamesPlayed:
        type: number
      assists:
        type: number
  PointStatResult:
    required:
      - id
      - lastName
      - firstName
      - team
      - gamesPlayed
      - points
    properties:
      id:
        type: string
      lastName:
        type: string
      firstName:
        type: string
      team:
        type: string
      gamesPlayed:
        type: number
      points:
        type: number
  PlusMinusStatResult:
    required:
      - id
      - lastName
      - firstName
      - team
      - gamesPlayed
      - plusMinus
    properties:
      id:
        type: string
      lastName:
        type: string
      firstName:
        type: string
      team:
        type: string
      gamesPlayed:
        type: number
      plusMinus:
        type: number
  PenalityMinStatResult:
    required:
      - id
      - lastName
      - firstName
      - team
      - gamesPlayed
      - penalityMin
    properties:
      id:
        type: string
      lastName:
        type: string
      firstName:
        type: string
      team:
        type: string
      gamesPlayed:
        type: number
      penalityMin:
        type: number
  PowerplayGoalStatResult:
    required:
      - id
      - lastName
      - firstName
      - team
      - gamesPlayed
      - powerplayGoals
    properties:
      id:
        type: string
      lastName:
        type: string
      firstName:
        type: string
      team:
        type: string
      gamesPlayed:
        type: number
      powerplayGoals:
        type: number
  ShorthandedGoalStatResult:
    required:
      - id
      - lastName
      - firstName
      - team
      - gamesPlayed
      - shorthandedGoals
    properties:
      id:
        type: string
      lastName:
        type: string
      firstName:
        type: string
      team:
        type: string
      gamesPlayed:
        type: number
      shorthandedGoals:
        type: number
  PowerplayPointStatResult:
    required:
      - id
      - lastName
      - firstName
      - team
      - gamesPlayed
      - powerplayPoints
    properties:
      id:
        type: string
      lastName:
        type: string
      firstName:
        type: string
      team:
        type: string
      gamesPlayed:
        type: number
      powerplayPoints:
        type: number
  ShorthandedPointStatResult:
    required:
      - id
      - lastName
      - firstName
      - team
      - gamesPlayed
      - shorthandedPoints
    properties:
      id:
        type: string
      lastName:
        type: string
      firstName:
        type: string
      team:
        type: string
      gamesPlayed:
        type: number
      shorthandedPoints:
        type: number
  HitStatResult:
    required:
      - id
      - lastName
      - firstName
      - team
      - gamesPlayed
      - hits
    properties:
      id:
        type: string
      lastName:
        type: string
      firstName:
        type: string
      team:
        type: string
      gamesPlayed:
        type: number
      hits:
        type: number
  PlayerInfosResult:
    required:
      - id
      - lastName
      - firstName
      - team
      - gamesPlayed
      - hits
    properties:
      id:
        type: string
      lastName:
        type: string
      firstName:
        type: string
      team:
        type: string
      gamesPlayed:
        type: number
      hits:
        type: number
  ErrorResponse:
    required:
      - error
    properties:
      error:
        $ref: '#/definitions/ApiError'
  ApiError:
    required:
      - code
      - message
    properties:
      code:
        type: string
      message:
        type: string
      target:
        type: string
      details:
        type: array
        items:
          $ref: '#/definitions/ApiError'
      innererror:
        $ref: '#/definitions/ApiInnerError'
  ApiInnerError:
    required:
      - code
      - message
    properties:
      code:
        type: string
      message:
        type: string
      innererror:
        $ref: '#/definitions/ApiInnerError'
    additionalProperties:
      type: string
host: 'nhlpoolhelperfrank.herokuapp.com'
schemes:
  - http
basePath: /nhl/poolApp


